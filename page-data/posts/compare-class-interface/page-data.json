{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/compare-class-interface","result":{"data":{"site":{"siteMetadata":{"title":"성장일기","subtitle":"여러 분야의 성장 일기","copyright":"© All rights reserved.","author":{"name":"Taehee Kwon"},"disqusShortname":"","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"d2da386f-5b68-510e-b028-1678d624f926","html":"<h2>클래스란?</h2>\n<h3>사전상의 의미</h3>\n<p><a href=\"https://ko.wikipedia.org/wiki/%ED%81%B4%EB%9E%98%EC%8A%A4_(%EC%BB%B4%ED%93%A8%ED%84%B0_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D)\">위키백과에서 클래스</a>란 객체 지향 프로그래밍(OOP)에서 특정 객체를 생성하기 위해 변수와 메소드를 정의하는 일종의 틀이라고 한다.<br/>\n객체를 정의 하기 위한 상태(멤버변수)와 메서드(함수)로 구성되어 있다.</p>\n<h3>간단히 말해서 클래스란!</h3>\n<p>객체를 만들어내기 위한 틀이다.<br/></p>\n<h2>객체란?</h2>\n<h3>사전상의 의미</h3>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)\">위키백과에서 객체</a>란 클래스에서 정의한 것을 토대로 메모리에 할당된 것으로 프로그램에서 사용되는 데이터 또는 식별자에 의해 참조되는 공간을 의미한다.<br/>\n객체는 오브젝트(object)라고도 불리며 변수, 자료구조, 함수가 될 수 있다.<br/>\n변수를 이용해 객체에 접근하며 메모리가 할당하기 전까지 객체는 존재하지 않는다.</p>\n<h3>간단히 말해서 객체란!</h3>\n<p>소프트웨어 상에서 구현할 대상이다.</p>\n<h2>인터페이스란?</h2>\n<h3>사전상의 의미</h3>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)\">위키백과에서 인스턴스</a>란 해당 클래스의 구조로 컴퓨터 저장 공간에서 할당된 실체를 의미한다.<br/></p>\n<h3>간단히 말해서 인터페이스란!</h3>\n<p>소프트웨어에서 구현된 실체이다.</p>\n<h2>클래스, 객체, 인터페이스의 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/* 클래스 */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 객체와 인스턴스 */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Animal</span> dog<span class=\"token punctuation\">,</span> cat<span class=\"token punctuation\">,</span> cow<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 객체</span>\n\t\n\t\t<span class=\"token comment\">// 인스턴스화</span>\n\t\tdog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// dog은 Animal 클래스의 인스턴스</span>\n\t\tcat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// cat은 Animal 클래스의 인스턴스</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>클래스, 객체, 인터페이스의 차이점 정리</h2>\n<blockquote>\n<p><strong>클래스</strong>는 쉽게 말해 설계도,<br/>\n<strong>객체</strong>는 그 설계도로 구현한 모든 대상,<br/>\n<strong>인스턴스</strong>는 그 객체가 메모리에 할당된 것!</p>\n</blockquote>","fields":{"slug":"/posts/compare-class-interface"},"frontmatter":{"title":"Java > 클래스, 객체, 인터페이스의 차이","date":"2020-01-22","description":"클래스, 객체, 인터페이스의 차이를 확실하게 정리해두기","path":"/posts/compare-class-interface","category":"Java"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/posts/compare-class-interface/#%ED%81%B4%EB%9E%98%EC%8A%A4%EB%9E%80\">클래스란?</a></p>\n<ul>\n<li><a href=\"/posts/compare-class-interface/#%EC%82%AC%EC%A0%84%EC%83%81%EC%9D%98-%EC%9D%98%EB%AF%B8\">사전상의 의미</a></li>\n<li><a href=\"/posts/compare-class-interface/#%EA%B0%84%EB%8B%A8%ED%9E%88-%EB%A7%90%ED%95%B4%EC%84%9C-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%9E%80\">간단히 말해서 클래스란!</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/posts/compare-class-interface/#%EA%B0%9D%EC%B2%B4%EB%9E%80\">객체란?</a></p>\n<ul>\n<li><a href=\"/posts/compare-class-interface/#%EC%82%AC%EC%A0%84%EC%83%81%EC%9D%98-%EC%9D%98%EB%AF%B8-1\">사전상의 의미</a></li>\n<li><a href=\"/posts/compare-class-interface/#%EA%B0%84%EB%8B%A8%ED%9E%88-%EB%A7%90%ED%95%B4%EC%84%9C-%EA%B0%9D%EC%B2%B4%EB%9E%80\">간단히 말해서 객체란!</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/posts/compare-class-interface/#%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%9E%80\">인터페이스란?</a></p>\n<ul>\n<li><a href=\"/posts/compare-class-interface/#%EC%82%AC%EC%A0%84%EC%83%81%EC%9D%98-%EC%9D%98%EB%AF%B8-2\">사전상의 의미</a></li>\n<li><a href=\"/posts/compare-class-interface/#%EA%B0%84%EB%8B%A8%ED%9E%88-%EB%A7%90%ED%95%B4%EC%84%9C-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%9E%80\">간단히 말해서 인터페이스란!</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/compare-class-interface/#%ED%81%B4%EB%9E%98%EC%8A%A4-%EA%B0%9D%EC%B2%B4-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%9D%98-%EC%98%88%EC%8B%9C\">클래스, 객체, 인터페이스의 예시</a></li>\n<li><a href=\"/posts/compare-class-interface/#%ED%81%B4%EB%9E%98%EC%8A%A4-%EA%B0%9D%EC%B2%B4-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90-%EC%A0%95%EB%A6%AC\">클래스, 객체, 인터페이스의 차이점 정리</a></li>\n</ul>","headings":[{"value":"클래스란?","depth":2},{"value":"사전상의 의미","depth":3},{"value":"간단히 말해서 클래스란!","depth":3},{"value":"객체란?","depth":2},{"value":"사전상의 의미","depth":3},{"value":"간단히 말해서 객체란!","depth":3},{"value":"인터페이스란?","depth":2},{"value":"사전상의 의미","depth":3},{"value":"간단히 말해서 인터페이스란!","depth":3},{"value":"클래스, 객체, 인터페이스의 예시","depth":2},{"value":"클래스, 객체, 인터페이스의 차이점 정리","depth":2}]}},"pageContext":{"slug":"/posts/compare-class-interface"}}}