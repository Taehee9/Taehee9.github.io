{"componentChunkName":"component---src-templates-post-tsx","path":"/git-specific-files-merge/","result":{"data":{"markdownRemark":{"html":"<p>git에서 특정한 파일만 merge 하고 싶을 때가 있다.</p>\n<p>B 브랜치를 A 브랜치에 merge 하려하는데 특정 파일(./a.js)만 병합하고 싶을 상황일 때 쓸 수 있는 방법이다.</p>\n<p>정확히는 merge 키워드를 사용하지 않지만 아래 방법으로 위의 케이스를 해결할 수 있다.</p>\n<p>A 브랜치로 체크아웃한 상태에서 아래 명령을 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout -p B a.js</code></pre></div>\n<p>위 명령으로 작업을 완료 할 수 있고 아래는 이에 대한 설명이다.</p>\n<hr>\n<p><code class=\"language-text\">checkout -p</code> 여기서 p 플래그는 <code class=\"language-text\">-p|--patch</code>으로 patch 옵션을 나타낸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout -p B a.js</code></pre></div>\n<p>명령을 통해서 패치하겠다는 명령을 주면,<br>\n변경 내용 출력과 함께 하단에 지금 작업에 반영하겠냐는 질문이 뜨는데 y를 입력해주면 된다.<br>\n여러번 질문이 나올 수 있는데 a를 입력하면 모든 질문에 y를 입력하는 행동을 할 수 있다.</p>\n<p>아래는 그 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout -p B a.js\n\n<span class=\"token function\">diff</span> --git b/a.js a/a.js\nindex 5f133a1<span class=\"token punctuation\">..</span>31d30c1 <span class=\"token number\">100644</span>\n--- b/a.js\n+++ a/a.js\n@@ -2,6 +2,7 @@ const _ <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'lodash'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n const Promise <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'bluebird'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n const path <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n+const config <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'./config'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n exports.createPages <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> graphql, actions <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n   const <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\nApply this hunk to index and worktree <span class=\"token punctuation\">[</span>y,n,q,a,d,j,J,g,/,e,?<span class=\"token punctuation\">]</span>? y</code></pre></div>\n<p>참고로 여기서 <code class=\"language-text\">[y,n,q,a,d,j,J,g,/,e,?]</code>의 의미는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">y - stage this hunk\nn - do not stage this hunk\nq - quit; do not stage this hunk nor any of the remaining ones\na - stage this hunk and all later hunks in the file\nd - do not stage this hunk nor any of the later hunks in the file\ng - select a hunk to go to\n/ - search for a hunk matching the given regex\nj - leave this hunk undecided, see next undecided hunk\nJ - leave this hunk undecided, see next hunk\nk - leave this hunk undecided, see previous undecided hunk\nK - leave this hunk undecided, see previous hunk\ns - split the current hunk into smaller hunks\ne - manually edit the current hunk\n? - print help</code></pre></div>","excerpt":"git에서 특정한 파일만 merge 하고 싶을 때가 있다. B 브랜치를 A 브랜치에 merge 하려하는데 특정 파일(./a.js)만 병합하고 싶을 상황일 때 쓸 수 있는 방법이다. 정확히는 merge…","tableOfContents":"","fields":{"slug":"/git-specific-files-merge/"},"frontmatter":{"title":"git 특정한 파일 병합(merge) 하기","date":"Nov 06, 2018","tags":["git"],"keywords":["git merge","git specific merge","git specific file merge","특정 파일 merge"],"update":null}}},"pageContext":{"slug":"/git-specific-files-merge/","series":[],"lastmod":"2018-11-06"}}}